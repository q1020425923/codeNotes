先注册service调接口
注入进directives组件中
组件中调注入的service方法
赋值在scope上，模板中可以直接调用

directives模板里的逻辑直接写在directives里
ng路由中-html中的逻辑写在对应的controller中

ng-app 指令定义一个 AngularJS 应用程序。

ng-model 指令把元素值（比如输入域的值）绑定到应用程序。

ng-bind 指令把应用程序数据绑定到 HTML 视图
ng-init 指令初始化 AngularJS 应用程序变量。
ng-bind={{ expression }}
AngularJS 模块（Module） 定义了 AngularJS 应用。

AngularJS 控制器（Controller） 用于控制 AngularJS 应用。

ng-app指令指明了应用, ng-controller 指明了控制器。
Module相当于一个容器
directive与hhtml元素绑定

service共有代码
controller私有代码
controller和view是mvvm，双向绑定$scope

ngjs调试工具：batarang

main.html - main.controller
main.html
    head.html
    body.html
    foot.html
main.controller中赋在$scope上的变量，main.html可用，里面的指令也可直接用
如：main.controller中$scope.a=123，body.html中{{a}}也能使用。

ng-class动态改变className

ng-show,ng-hide
ng-if

directive
    transclude: true //内嵌html
    link: function(scope, element, attr){
        // scope绑定作用域，element调用指令的元素，它的根元素上的所有属性集合
        // 修改dom
    }
    scope: true(继承来隔离，scope变不影响$scope)|false(默认，使用的$scope)|{}


对于scope: {}时
scope: {
    aa: '=',//传入变量
    bb: '@',//传入字符串，指令中<span bb='xxx'></span>//传给bb字符串'xxx'
    cc: '&'//传入回调函数，指令中<span ng-click='cc({id:1});'></span>
}
父页面：
<div aa='AA' cc='click(id)'></div>//可以时指令调用父页面的函数

上面3个都可以跟变量
如：
scope: {
    aa: '=',
    bb: '@xx',//把bb重命名为xx，在组件中就得这么用，<span xx='xxx'></span>
    cc: '&'
}

<li ui-sref='main（路由id）'></li>路由跳转