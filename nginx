反向代理：由代理者代替用户访问真实资源的过程
特点：
1.用户无需关心真实资源的位置
2.代理在内部有专门的配置，实现了路径的映射

Nginx（软件负载均衡器）是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器

三大运营商用硬件负载均衡器，F5服务器

如没买域名，就不能走dns域名解析服务器。改本地hosts文件，实现域名和本地ip的映射，走本机的nginx服务器

启动
start nginx

服务默认端口80

重启
nginx -s reload

关闭
nginx -s stop
--------------------------
nginx能直接代理端口，
改域名还得配合hosts文件，如添加
127.0.0.1       www.springboot02.com

127.0.0.1 == localhost == 本机域名
192.168.0.107 局域网下本机ip
192.168.0.101 局域网下服务器ip

nginx反向代理，结合hosts修改域名和端口

1.hosts添加dns重绑定操作
127.0.0.1       www.springboot02.com

2.webpack.devServer关闭host检查
webpack.devServer.disableHostCheck:true

3.nginx反向代理
http{
    # 新版    
    server{
        listen  80;#浏览器输入端口
        server_name  www.springboot02.com;#浏览器输入域名

        # www.springboot02.com/请求映射为http://localhost:8080
        location / { 
            proxy_pass http://localhost:8080/; #前端页面地址		
        }
        # www.springboot02.com/api/请求映射为http://localhost:84
		location /api/ {
			proxy_pass   http://192.168.0.107:84/; #后台接口地址            
        }
    }
    # 访问www.springboot02.com正常开发

    # 旧版
    server{
        listen  85;#浏览器输入端口
        server_name  localhost;#浏览器输入域名

        location / {
            proxy_pass http://localhost:8080; #前端页面地址
            proxy_redirect default;
        }

        location /api { #添加访问目录为/api的代理配置
			rewrite  ^/api/(.*)$ /$1 break;# 监听所有/api前缀，实则转发后台api接口地址
			proxy_pass   http://a.cloud.cn/api/; #后台接口地址
        }        
    }
}
解释：
location 为本地域名如：localhost:8080
location /apis就重写为localhost:8080/apis/xxx 实则转发http://a.cloud.cn/api/xxx的接口地址
--------------------------