-------------------------------------------------------------------
cnpm安装多个模块方法 cnpm install --save axios vuex 空格隔开就行
-------------------------------------------------------------------
通过node环境 依赖node_modules包的项目，node_modules不必提交到git上。
如果git上有，拉取后删了通过cnpm install rimraf -g安装，然后rimraf node_modules删除node_modules文件夹。
再cnpm install，再运行就不会报错了。
-------------------------------------------------------------------
使用$ npm install -g cnpm --registry=https://registry.npm.taobao.org时，有时cnpm不是最新版本
推荐使用下一种方法：
通过添加 npm 参数 alias 一个新命令，此方法资源更新
alias cnpm="npm --registry=https://registry.npm.taobao.org \
--cache=$HOME/.npm/.cache/cnpm \
--disturl=https://npm.taobao.org/dist \
--userconfig=$HOME/.cnpmrc"
-------------------------------------------------------------------
package.json npm的配置文件
-------------------------------------------------------------------
package-lock.json作用
锁定安装时的包的版本号，并且需要上传到git，以保证其他人在npm install时大家的依赖能保证一致
package-lock.json 是在 `npm install`时候生成一份文件，用以记录当前状态下实际安装的各个npm package的具体来源和版本号。

想要看一个组件支不支持npm包引入，可以点入它的github官网，看readme里有没有npm引入

貌似npm包引入名，和安装名相同
如：
npm i install -S 'animate.css'
import 'animate.css'

npm i install -S 'axios'
import axios from 'axios'即可

npm i -S 即 npm i -save     写入dependencies    生产环境
npm i -D 即 npm i -save-dev 写入devDependencies 开发环境

npm i 会下载两个环境的依赖
npm install --production 只安装生产环境依赖，不需要调试开发的话

webpack npm run build时打包项目里引用的部分

axios返回的数据在res.data里 套了一层

npm i后面加@，安装指定版本
如：
npm install less@2.7.1 -g
