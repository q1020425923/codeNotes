--------------------------------------------------------------------------------------------------
微信小程序与h5对应标签
view-div
text-h1~h6/span/p
icon-i
checkbox-input
radio-input
view bindtap='chooseImage'-input type='file'
picker range=''-select
navigator-a
image-img
--------------------------------------------------------------------------------------------------
页面间通讯 getCurrentPages方法
data:{
    myData:{}
},
onLoad: function (options) {
  //getCurrentPages方法直接调用页面栈        
  let pages = getCurrentPages();
  //pages[pages.length - 2] 上一个页面实例
  //pages[pages.length - 1] 当前页面实例
  myData = pages[pages.length - 2].data.myData;
}
--------------------------------------------------------------------------------------------------
微信小程序wx:key作用
http://www.wxappclub.com/topic/536
为for循环提供唯一标识
--------------------------------------------------------------------------------------------------
微信小程序。bind事件如bindtap绑定不会阻止冒泡事件向上冒泡，catch事件如catchtap绑定可以阻止冒泡事件向上冒泡。
--------------------------------------------------------------------------------------------------
微信小程序中e.currentTarget和e.target区别//触发父与子元素的区别
//https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxml/event.html
一般都用e.currentTarget不会错。
--------------------------------------------------------------------------------------------------
swiper swiper-item布局。swiper里只能放swiper-item。放了就能用了，swiper-item自动宽高100%，不需要设置额外属性。
--------------------------------------------------------------------------------------------------
微信小程序自身iconfont水平垂直居中。
.icon{width:30rpx;height:30rpx;background:#71a3f1;border-radius: 50%;color:#fff;position: relative;text-align:center;line-height:30rpx;}
.icon:before{position: absolute;top:0rpx;left:0;right:0;bottom:0;}
父级和伪类得写两套。text-align和行高，加垂直居中术。才能实现。
--------------------------------------------------------------------------------------------------
微信小程序。scroll-view
1.scroll-view view水平布局和一般的盒模型不一样。
父元素scroll-view必须设置white-space: nowrap。
子元素view必须设置display:inline-block。
2.scroll-view view垂直布局和一般盒模型一样。
但是必须给scroll-view一个高度，固定值或百分比都行，不给的话无法上下滑动。
--------------------------------------------------------------------------------------------------
微信小程序
wx.createSelectorQuery()等两类方法
获取的是节点位置信息的查询请求
query.select('#the-id').boundingClientRect()//这段代码的意思是选择Id=the-id的节点，获取节点位置信息的查询请求
--------------------------------------------------------------------------------------------------
自定义组件
json 文件中 "component": true

js文件中 
普通页面page({})注册
组件页面Component({})注册

properties接收值
data组件内部数据
methods组件自定义方法

使用自定义组件'usingComponents'
json文件：
{
  "usingComponents": {
    "component-tag-name": "path/to/the/custom/component"
  }
}

slot
自定义组件中可以放入slot标签
父组件中可以在自定义标签中放入内容
默认一个自定义组件一个slot
开启多组件，以name区分 同vue
options: {
    multipleSlots: true // 在组件定义时的选项中启用多slot支持
  },

父子通讯，同vue，自定义标签加自定义属性

:host 指定它所在节点的默认样式

组件希望接受外部传入的样式类（类似于 view 组件的 hover-class 属性）。此时可以在 Component 中用 externalClasses
Component({
  externalClasses: ['my-class']
})
<!-- 组件 custom-component.wxml -->
<custom-component class="my-class">

Component构造器
behaviors类似于mixins和traits的组件间代码复用机制

this.triggerEvent类似this.$emit触发事件
指定事件名、detail对象和事件选项
this.triggerEvent('myevent', myEventDetail, myEventOption)

组件的属性可以用于接收页面的参数，如访问页面 /pages/index/index?paramA=123&paramB=xyz ，如果声明有属性 paramA 或 paramB ，则它们会被赋值为 123 或 xyz

父组件还可以通过 this.selectComponent 方法获取子组件实例对象，这样就可以直接访问组件的任意数据和方法

触发自定义事件
<component-tag-name bind:myevent="onMyEvent" />

组件间关系
<custom-ul>
  <custom-li> item 1 </custom-li>
  <custom-li> item 2 </custom-li>
</custom-ul>
在组件定义时加入 relations 定义段，可以解决相互间的复杂通信

在组件中使用抽象节点
json文件
{
  "componentGenerics": {
    "selectable": true
  }
}
{
  "usingComponents": {
    "custom-radio": "path/to/custom/radio",
    "custom-checkbox": "path/to/custom/checkbox"
  }
}
<selectable-group generic:selectable="custom-radio" />
<selectable-group generic:selectable="custom-checkbox" />

小程序开发工具也能写'debugger'打断点

引用插件
小程序管理后台的“设置-第三方服务-插件管理”中添加插件
app.json：
{
  "plugins": {
    "myPlugin": {
      "version": "1.0.0",
      "provider": "wxxxxxxxxxxxxxxxxx"
    }
  }
}

使用插件的 js 接口
requirePlugin 方法

使用插件的自定义组件
"usingComponents": {
    "hello-component": "plugin://myPlugin/hello-component"
  }

分包
├── app.js
├── app.json
├── app.wxss
├── packageA
│   └── pages
│       ├── cat
│       └── dog
├── packageB
│   └── pages
│       ├── apple
│       └── banana
├── pages
│   ├── index
│   └── logs
└── utils

 app.json subPackages 字段声明项目分包结构

 多线程 Worker
 双方使用 Worker.postMessage() 来发送数据，Worker.onMessage() 来接收数据，传输的数据并不是直接共享，而是被复制的。
 app.json 中可配置 Worker

微信小程序中 父级flex布局定义了 .ai-c{align-items: center;}
子级height高度无法正常显示

微信背景图片不能用本地资源，img可以

swiper+scroll-view 滑动结构
<swiper :current='tabIndex' @change='c' class='sw'>//.sw{height:100%;}
  <!-- xxx -->
  <swiper-item>
    <scroll-view class='sV' scroll-y='true' @scrolltolower='load'>.sV{height:100%;}
      <ul>
        <li class='item'></li>
      </ul>
    </scroll-view>
  </swiper-item>
</swiper>

data(){
  return{
    tabIndex:0 
  }
},
methods:{
  c(e){
    this.tabIndex = e.target.current;      
  }
}